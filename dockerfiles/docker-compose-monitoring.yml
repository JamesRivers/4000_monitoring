version: "3.6"

services:
  prometheus:
    image: prom/prometheus:v2.23.0
    ports:
      - 9090:9090
    networks:
      - team
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention=200h"
      - "--web.enable-lifecycle"
    volumes:
      # - /etc/team/config/prometheus:/etc/prometheus/
      - /etc/team/docker_prom_vol/prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana:8.1.5
    ports:
      - 3001:3000
    networks:
      - team
    user: "$UID:$GID"
    volumes:
      #  - /etc/team/config/grafana/data:/var/lib/grafana
      - /etc/team/docker_config/docker_config_files/grafana:/var/lib/grafana
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.39.3
    networks:
      - team
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - 8085:8080
    deploy:
      mode: global
     # replicas: 1
     # placement:
     #   constraints:
     #     - node.role == manager

networks:
  team:
    external: true

volumes:
  prometheus_data: {}
